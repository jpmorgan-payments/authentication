name: Tests

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request_target:
    branches: ["main"]
env:
  ACCESS_TOKEN_URL: ${{ secrets.ACCESS_TOKEN_URL }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  KEY_BASE64: ${{ secrets.KEY_BASE64 }}
  CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
  CERTIFICATE_PATH: ${{secrets.CERTIFICATE_PATH}}
  CERTIFICATE_KEY_PATH: ${{secrets.CERTIFICATE_KEY_PATH }}
  PUBLIC_KEY_PATH_DIGITAL: ${{secrets.PUBLIC_KEY_PATH_DIGITAL}}
  PRIVATE_KEY_PATH_DIGITAL: ${{secrets.PRIVATE_KEY_PATH_DIGITAL}}
  PUBLIC_KEY_DIGITAL_BASE64: ${{ secrets.PUBLIC_KEY_DIGITAL_BASE64 }}
  PRIVATE_KEY_DIGITAL_BASE64: ${{ secrets.PRIVATE_KEY_DIGITAL_BASE64 }}

permissions:
  contents: read

jobs:
  test-python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./python/sample-authentication-code
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Retrieve the secret and decode it to a file
        run: |
          cd tests
          echo "$CERTIFICATE_BASE64" | base64 --decode > "$CERTIFICATE_PATH" 
          echo "$KEY_BASE64" | base64 --decode > "$CERTIFICATE_KEY_PATH"
          echo "$PUBLIC_KEY_DIGITAL_BASE64" | base64 --decode > "$PUBLIC_KEY_PATH_DIGITAL"
          echo "$PRIVATE_KEY_DIGITAL_BASE64" | base64 --decode > "$PRIVATE_KEY_PATH_DIGITAL"

      - name: Test with pytest
        run: |
          cd tests
          pytest
  test-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./go/sample-authentication-code/pkg/samples
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.19.0"
      - name: Retrieve the secret and decode it to a file
        run: |
          echo "$CERTIFICATE_BASE64" | base64 --decode > "$CERTIFICATE_PATH" 
          echo "$KEY_BASE64" | base64 --decode > "$CERTIFICATE_KEY_PATH"
          echo "$PUBLIC_KEY_DIGITAL_BASE64" | base64 --decode > "$PUBLIC_KEY_PATH_DIGITAL"
          echo "$PRIVATE_KEY_DIGITAL_BASE64" | base64 --decode > "$PRIVATE_KEY_PATH_DIGITAL"
      - run: go test
  test-java:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./java/sample-authentication-code
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
